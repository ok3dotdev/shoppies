{"version":3,"sources":["components/Search.js","components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Result.js","components/Results.js","components/Nominations.js","App.js","index.js"],"names":["Search","handleInput","search","className","type","placeholder","onChange","onKeyPress","Header","AppReducer","state","action","nominations","length","payload","filter","nomination","imdbID","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","removeMovieFromNominations","id","addMovieToNominations","result","children","Result","useContext","nominationsDisabled","find","Title","Year","disabled","onClick","Results","results","map","Nominations","alert","App","useState","query","setState","e","preventDefault","target","prevState","key","axios","apiurl","then","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3311b08.chunk.js","sourcesContent":["import React from 'react'\nimport {FiSearch} from 'react-icons/fi'\n\n\nfunction Search({handleInput, search}) {\n    return (\n        <section className=\"search\">\n        <FiSearch className='icon'/>\n         <input className='searchbox' type=\"text\" placeholder='Search movies here'\n         onChange={handleInput}\n         onKeyPress={search}/>\n\n         </section>\n\n\n    )\n}\n\nexport default Search\n","import React from 'react'\nimport Search from './Search'\n\nfunction Header({ handleInput, search }) {\n  return (\n    <header className='header'>\n      <h1>The Shoppies</h1>\n      <h6>Submission by Henry Oke.</h6>\n      <Search handleInput={handleInput} search={search} />\n    </header>\n  )\n}\n\nexport default Header\n\n\n","function AppReducer(state, action) {\n    switch (action.type) {\n        case 'ADD_MOVIE_TO_NOMINATIONS':\n            return {\n                ...state, nominations: (state.nominations.length === 5) ? [...state.nominations] : [...state.nominations, action.payload]\n            }\n        case 'REMOVE_MOVIE_FROM_NOMINATIONS':\n            return {\n                ...state,\n                nominations: state.nominations.filter(nomination => nomination.imdbID !== action.payload)\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default AppReducer;","import React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n//initial state\nconst initialState = {\n  nominations: localStorage.getItem('nominations') ? JSON.parse(localStorage.getItem('nominations')) : [],\n};\n\n//creating context\n\nexport const GlobalContext = createContext(initialState);\n\n//provider\nexport const GlobalProvider = (props) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\"nominations\", JSON.stringify(state.nominations));\n\n\n  }, [state]);\n\n  //actions\n  const addMovieToNominations = (result) => {\n    dispatch({ type: \"ADD_MOVIE_TO_NOMINATIONS\", payload: result });\n  };\n\n  const removeMovieFromNominations = (id) => {\n    dispatch({ type: \"REMOVE_MOVIE_FROM_NOMINATIONS\", payload: id });\n  };\n\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        nominations: state.nominations,\n        removeMovieFromNominations,\n\n        addMovieToNominations,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction Result({ result }) {\n  const { addMovieToNominations, nominations } = useContext(GlobalContext);\n\n  let storedMovie = nominations.find((nomination) => nomination.imdbID === result.imdbID);\n\n  const nominationsDisabled = storedMovie ? true : false;\n  return (\n    <ul className=\"results result\">\n      <li className=\"result-title\">{result.Title} {''}<span>({result.Year})</span></li>\n      <button\n        className=\"btn\"\n        disabled={nominationsDisabled}\n        onClick={() => addMovieToNominations(result)}\n      >\n        Nominate\n      </button>\n    </ul>\n  );\n}\n\nexport default Result;\n","import React from 'react'\n\nimport Result from './Result'\n\nfunction Results({ results }) {\n\treturn (\n\t\t<section className=\"results nominations\">\n\n\t\t\t<h3>Search results...</h3>\n\t\t\t{(!results || results.length < 1) ? <h1>Please search for Movies</h1> : results.map(result => (\n\t\t\t\t<Result key={result.imdbID} result={result} />\n\t\t\t))}\n\n\t\t</section>\n\t)\n}\n\nexport default Results","import React, { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction Nominations() {\n\n\n  const { nominations, removeMovieFromNominations } = useContext(GlobalContext);\n\n\n  useEffect(() => {\n    if (nominations.length === 5) {\n      alert('Thank you for you Nominations!');\n\n\n    }\n\n  }, [nominations])\n\n\n  return (\n    <section className=\"results nominations\">\n      <h3>Nominations</h3>\n      <ul>\n        {nominations.map((nomination) => (\n          <div key={nomination.imdbID} className=\"result results\">\n            <li className=\"result-title\">{nomination.Title} {''}<span>({nomination.Year})</span></li>\n\n            <button onClick={() => removeMovieFromNominations(nomination.imdbID)} className=\"btn\">Remove</button>\n          </div>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default Nominations;\n","import Header from \"./components/Header\";\nimport Results from \"./components/Results\";\nimport Nominations from \"./components/Nominations\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [state, setState] = useState({\n    query: \"\",\n    results: [],\n  });\n\n\n  const apiurl = \"http://www.omdbapi.com/?apikey=c00d1dfe\";\n\n  const search = (e) => {\n    if (e.key === \"Enter\") {\n      axios(apiurl + \"&s=\" + state.query).then(({ data }) => {\n        let results = data.Search;\n\n        setState((prevState) => {\n          return { ...prevState, results: results };\n        });\n      });\n    }\n  };\n\n  const handleInput = (e) => {\n    e.preventDefault();\n    let query = e.target.value;\n\n    setState((prevState) => {\n      return { ...prevState, query: query };\n    });\n  };\n  return (\n    <GlobalProvider>\n      <div className=\"App\">\n        <Header handleInput={handleInput} search={search} />\n        <main className=\"main\">\n          <Results results={state.results} />\n          <Nominations />\n\n        </main>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}